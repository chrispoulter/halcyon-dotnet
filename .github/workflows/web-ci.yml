name: CI Build and Publish Web

on:
  push:
    branches: ["main", "develop", "feature/**", "release/**", "hotfix/**"]
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'production' || 'preview' }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.1.1
        with:
            versionSpec: '6.0.x'

      - name: Determine Version
        id: version_step
        uses: gittools/actions/gitversion/execute@v3.1.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          cache-dependency-path: ./Halcyon.Web

      - name: Build and lint
        working-directory: ./Halcyon.Web
        run: |
          npm version "${{ steps.version_step.outputs.semVer }}-${{ steps.version_step.outputs.shortSha }}" --no-git-tag-version
          npm ci
          npm run lint
          npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Lowercase the repo name
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v5
        with:
          file: ./Halcyon.Web/Dockerfile
          tags: |
            ghcr.io/${{ env.REPO }}-web:${{ steps.version_step.outputs.semVer }}
            ghcr.io/${{ env.REPO }}-web:${{ steps.version_step.outputs.semVer }}-${{ steps.version_step.outputs.shortSha }}
            ghcr.io/${{ env.REPO }}-web:${{ steps.version_step.outputs.preReleaseLabel || 'latest' }}
          context: ./Halcyon.Web
          push: true
          provenance: false

      - name: Trigger deployment
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            --data "{\"imageUrl\":\"ghcr.io/${{ env.REPO }}-web:${{ steps.version_step.outputs.semVer }}-${{ steps.version_step.outputs.shortSha }}\"}" \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID_WEB }}/deploys
